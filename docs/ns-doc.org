* aod.imgui.macros
  - *ns-name*
  #+BEGIN_SRC markdown

#+END_SRC

  - -safe
  #+BEGIN_SRC markdown

#+END_SRC

  - window
  #+BEGIN_SRC markdown
(window args . body)
applies args to imgui/begin, executes body and calls imgui/end
#+END_SRC

  - maximized
  #+BEGIN_SRC markdown

#+END_SRC

  - child
  #+BEGIN_SRC markdown

#+END_SRC

  - group
  #+BEGIN_SRC markdown

#+END_SRC

  - main-menu-bar
  #+BEGIN_SRC markdown

#+END_SRC

  - menu-bar
  #+BEGIN_SRC markdown

#+END_SRC

  - menu
  #+BEGIN_SRC markdown

#+END_SRC

  - menu-item
  #+BEGIN_SRC markdown

#+END_SRC

  - horizontal
  #+BEGIN_SRC markdown
(horizontal . body)
executes first element of body and then inserts any next element with the same-line called before
#+END_SRC
* aod.imgui.helpers
  - *ns-name*
  #+BEGIN_SRC markdown

#+END_SRC

  - draw-circle
  #+BEGIN_SRC markdown

#+END_SRC

  - draw-arc
  #+BEGIN_SRC markdown

#+END_SRC

  - draw-lines
  #+BEGIN_SRC markdown

#+END_SRC

  - frgb->u32
  #+BEGIN_SRC markdown

#+END_SRC
* aod.c.imgui.window-flags
  - None
  #+BEGIN_SRC markdown

#+END_SRC

  - NoTitleBar
  #+BEGIN_SRC markdown

#+END_SRC

  - NoResize
  #+BEGIN_SRC markdown

#+END_SRC

  - NoMove
  #+BEGIN_SRC markdown

#+END_SRC

  - NoScrollbar
  #+BEGIN_SRC markdown

#+END_SRC

  - NoScrollWithMouse
  #+BEGIN_SRC markdown

#+END_SRC

  - NoCollapse
  #+BEGIN_SRC markdown

#+END_SRC

  - AlwaysAutoResize
  #+BEGIN_SRC markdown

#+END_SRC

  - NoBackground
  #+BEGIN_SRC markdown

#+END_SRC

  - NoSavedSettings
  #+BEGIN_SRC markdown

#+END_SRC

  - NoMouseInputs
  #+BEGIN_SRC markdown

#+END_SRC

  - MenuBar
  #+BEGIN_SRC markdown

#+END_SRC

  - HorizontalScrollbar
  #+BEGIN_SRC markdown

#+END_SRC

  - NoFocusOnAppearing
  #+BEGIN_SRC markdown

#+END_SRC

  - NoBringToFrontOnFocus
  #+BEGIN_SRC markdown

#+END_SRC

  - AlwaysVerticalScrollbar
  #+BEGIN_SRC markdown

#+END_SRC

  - AlwaysHorizontalScrollbar
  #+BEGIN_SRC markdown

#+END_SRC

  - AlwaysUseWindowPadding
  #+BEGIN_SRC markdown

#+END_SRC

  - NoNavInputs
  #+BEGIN_SRC markdown

#+END_SRC

  - NoNavFocus
  #+BEGIN_SRC markdown

#+END_SRC

  - UnsavedDocument
  #+BEGIN_SRC markdown

#+END_SRC

  - NoNav
  #+BEGIN_SRC markdown

#+END_SRC

  - NoDecoration
  #+BEGIN_SRC markdown

#+END_SRC

  - NoInputs
  #+BEGIN_SRC markdown

#+END_SRC
* aod.c.imgui
  - begin
  #+BEGIN_SRC markdown
(begin name &optional *bool window-flags)
- name: the name of the window, a scheme string
- *bool: a pointer to bool, from aod.c.foreign. Closing the window modifies the pointer value
#+END_SRC

  - begin-maximized
  #+BEGIN_SRC markdown
(begin-maximized title &optional window-flags) NOT PART OF IMGUI: A convenient way to do a maximized window
window-flags is just one int with bit flags set. There are already plenty set like NoTitleBar, NoResize etc.
#+END_SRC

  - end
  #+BEGIN_SRC markdown
(end)
#+END_SRC

  - spacing
  #+BEGIN_SRC markdown
(spacing)
#+END_SRC

  - text
  #+BEGIN_SRC markdown
(text text) displays a text. the argument is just a scheme string
#+END_SRC

  - label
  #+BEGIN_SRC markdown
(label ...) NOT DONE
#+END_SRC

  - align-text-to-frame-padding
  #+BEGIN_SRC markdown
(align-text-to-frame-padding)
#+END_SRC

  - button
  #+BEGIN_SRC markdown
Button
#+END_SRC

  - small-button
  #+BEGIN_SRC markdown
(small-button text)
#+END_SRC

  - checkbox
  #+BEGIN_SRC markdown
(checkbox label *value) *value is *bool pointer
#+END_SRC

  - begin-menu-bar
  #+BEGIN_SRC markdown
(begin-menu-bar)
#+END_SRC

  - end-menu-bar
  #+BEGIN_SRC markdown
(end-menu-bar)
#+END_SRC

  - begin-main-menu-bar
  #+BEGIN_SRC markdown
(begin-main-menu-bar)
#+END_SRC

  - end-main-menu-bar
  #+BEGIN_SRC markdown
(end-main-menu-bar)
#+END_SRC

  - begin-menu
  #+BEGIN_SRC markdown
(begin-menu label) label could be "File" for example
#+END_SRC

  - end-menu
  #+BEGIN_SRC markdown
(end-menu)
#+END_SRC

  - separator
  #+BEGIN_SRC markdown
(separator)
#+END_SRC

  - menu-item
  #+BEGIN_SRC markdown
(menu-item label) TODO add more arguments (&optional shortcut selected)
#+END_SRC

  - same-line
  #+BEGIN_SRC markdown
(same-line) puts the next element in the same line as the previously drawn element
#+END_SRC

  - begin-child
  #+BEGIN_SRC markdown
(begin-child id) (string?)
#+END_SRC

  - end-child
  #+BEGIN_SRC markdown
(end-child)
#+END_SRC

  - begin-group
  #+BEGIN_SRC markdown
(begin-group)
#+END_SRC

  - end-group
  #+BEGIN_SRC markdown
(end-group)
#+END_SRC

  - dummy
  #+BEGIN_SRC markdown
(dummy width height)
#+END_SRC

  - draw-circle
  #+BEGIN_SRC markdown
(draw-circle cx cy r col &optional segments thickness)
#+END_SRC

  - draw-arc
  #+BEGIN_SRC markdown
(cx cy r a-min a-max col &optional segments thickness)
#+END_SRC

  - draw-circle-filled
  #+BEGIN_SRC markdown
(cx cy r col &optional segments)
#+END_SRC

  - draw-line
  #+BEGIN_SRC markdown
(x1 y1 x2 y2 col &optional thickness)
#+END_SRC

  - draw-text
  #+BEGIN_SRC markdown
(x y text color)
#+END_SRC

  - color32
  #+BEGIN_SRC markdown
(color32 r g b &optional alpha) input ranging from 0 to 255
Returns a u32 representation of the color 0xRRGGBBAA
#+END_SRC

  - set-color
  #+BEGIN_SRC markdown
(set-color color-index color-u32)
#+END_SRC

  - color-edit-3
  #+BEGIN_SRC markdown
(color-edit-3 label *values) *values: aod.c.foreign float[] array
#+END_SRC

  - slider-float
  #+BEGIN_SRC markdown
(slider-float label *value min max &optional (format "%.3f"))
#+END_SRC

  - slider-int
  #+BEGIN_SRC markdown
(label *value min max) value: *int pointer from aod.c.foreign/new-int
#+END_SRC

  - input-text
  #+BEGIN_SRC markdown
(input-text label *buffer buffer-size) *buffer is c-pointer to *char from aod.c.foreign/new-char[]
#+END_SRC

  - input-text-multiline
  #+BEGIN_SRC markdown
(input-text-multiline label *buffer buffer-size) *buffer is c-pointer to char* from aod.c.foreign/new-char[]
#+END_SRC

  - combo
  #+BEGIN_SRC markdown
(combo name *index labels)
- *index as returned from aod.c.foreign/new-int
- labels is a 0 separated string. eg "labelA\0labelB\0\0"
#+END_SRC

  - is-item-deactivated-after-edit
  #+BEGIN_SRC markdown
IsItemDeactivatedAfterEdit
#+END_SRC

  - is-item-deactivated
  #+BEGIN_SRC markdown
IsItemDeactivated
#+END_SRC

  - set-item-default-focus
  #+BEGIN_SRC markdown
SetItemDefaultFocus
#+END_SRC

  - is-item-focused
  #+BEGIN_SRC markdown
IsItemFocused
#+END_SRC

  - set-keyboard-focus-here
  #+BEGIN_SRC markdown
SetKeyboardFocusHere (&optional offset)
focus keyboard on the next widget. Use positive 'offset' to access sub components of a multiple component widget. Use -1 to access previous widget
#+END_SRC
* aod.c.gl
  - save-screenshot
  #+BEGIN_SRC markdown
(save-screenshot filename) Saves a screenshot of the current gl context
#+END_SRC
* aod.c.nfd
  - open
  #+BEGIN_SRC markdown
(open) Open file dialog. Returns either the selected filename or #f
#+END_SRC

  - save
  #+BEGIN_SRC markdown
(save) Save file dialog. Returns either the selected target filename or #f
#+END_SRC
* aod.c.imgui-sdl
  - setup
  #+BEGIN_SRC markdown
(setup width height) Creates a new SDL_Window, setups opengl, inits imgui
#+END_SRC

  - prepare
  #+BEGIN_SRC markdown
(prepare void*) To be called before calling any ImGui draw functionality
#+END_SRC

  - flush
  #+BEGIN_SRC markdown
(flush void*) To be called after having called any ImGui draw functionality. Paints the window
#+END_SRC

  - destroy
  #+BEGIN_SRC markdown
(destroy void*) Destroys the window & the opengl context
#+END_SRC
* aod.c.midi
  - note-on?
  #+BEGIN_SRC markdown
(note-on? status data1 data2)
#+END_SRC

  - note-off?
  #+BEGIN_SRC markdown
(note-off? status data1 data2)
#+END_SRC

  - note-number
  #+BEGIN_SRC markdown
(note-number status data1 data2) Returns either the note or -1
#+END_SRC
